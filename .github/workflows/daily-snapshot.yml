name: PM33 Daily Development Snapshot

on:
  schedule:
    # Run daily at 6 PM PST (2 AM UTC next day)
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

env:
  PROJECT_NAME: PM33 Strategic Intelligence Platform
  TARGET_MRR: 100K
  DEADLINE: Dec 31 2025

jobs:
  daily-snapshot:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Get full history for meaningful commit messages
        
    - name: Set up Git user
      run: |
        git config --global user.name "PM33 Daily Snapshot Bot"
        git config --global user.email "noreply@pm33.ai"
    
    - name: Generate snapshot summary
      id: snapshot
      run: |
        # Get project stats
        TOTAL_FILES=$(find . -type f -name "*.md" -o -name "*.py" -o -name "*.tsx" -o -name "*.ts" | wc -l)
        DOCUMENTATION_FILES=$(find . -name "*.md" | wc -l)  
        FRONTEND_FILES=$(find app/frontend -name "*.tsx" -o -name "*.ts" 2>/dev/null | wc -l || echo 0)
        BACKEND_FILES=$(find app/backend -name "*.py" 2>/dev/null | wc -l || echo 0)
        
        # Get recent changes
        CHANGES_TODAY=$(git log --since="24 hours ago" --oneline | wc -l)
        FILES_MODIFIED=$(git diff --name-only HEAD~1 2>/dev/null | wc -l || echo 0)
        
        # Calculate days until deadline
        DEADLINE_DATE="2025-12-31"
        DAYS_REMAINING=$(( ( $(date -d "$DEADLINE_DATE" +%s) - $(date +%s) ) / 86400 ))
        
        # Create snapshot summary
        cat > snapshot-summary.md << EOF
        # PM33 Daily Development Snapshot - $(date +%Y-%m-%d)
        
        ## 🎯 **Project Status**
        - **Mission**: PMO Transformation through Agentic AI Teams
        - **Target**: $TARGET_MRR MRR by $DEADLINE  
        - **Days Remaining**: $DAYS_REMAINING days
        
        ## 📊 **Development Metrics**
        - **Total Project Files**: $TOTAL_FILES
        - **Documentation Files**: $DOCUMENTATION_FILES  
        - **Frontend Components**: $FRONTEND_FILES
        - **Backend Services**: $BACKEND_FILES
        - **Changes in Last 24h**: $CHANGES_TODAY commits
        - **Files Modified**: $FILES_MODIFIED
        
        ## 🏗️ **Architecture Status**
        - ✅ 4 Agentic AI Teams Documented
        - ✅ Services Architecture (Railway, Pinecone, Claude, OpenAI, Together AI)
        - ✅ Design System: Marketing vs App Separation
        - ✅ Frontend: Next.js 15.4.6 + Mantine UI
        - 🟡 Backend: FastAPI services (in progress)
        - 🟡 Authentication: Multi-tenant system (planned)
        
        ## 📋 **Key Documentation**
        - PM33_PRODUCT_REQUIREMENTS_DOCUMENT.md
        - INSTRUCTIONS-FOR-FUTURE-AGENTS.md  
        - Marketing: MARKETING_DESIGN_SYSTEM.md
        - App: APP_DESIGN_SYSTEM.md
        - Strategy: UNIFIED_MARKETING_STRATEGY.md
        
        ## 🔄 **Recent Development Focus**
        $(git log --since="24 hours ago" --oneline --format="- %s" | head -10)
        
        ---
        *Automated snapshot generated by GitHub Actions*
        EOF
        
        echo "snapshot_created=true" >> $GITHUB_OUTPUT
        echo "days_remaining=$DAYS_REMAINING" >> $GITHUB_OUTPUT
        
    - name: Check for significant changes
      id: changes
      run: |
        # Check if any critical files were modified
        CRITICAL_FILES="CLAUDE.md INSTRUCTIONS-FOR-FUTURE-AGENTS.md PM33_PRODUCT_REQUIREMENTS_DOCUMENT.md"
        CRITICAL_CHANGED=false
        
        for file in $CRITICAL_FILES; do
          if git diff --name-only HEAD~1 | grep -q "$file"; then
            CRITICAL_CHANGED=true
            break
          fi
        done
        
        echo "critical_changed=$CRITICAL_CHANGED" >> $GITHUB_OUTPUT
        
    - name: Add and commit snapshot
      run: |
        # Add all changes
        git add -A
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        
        # Create comprehensive commit message
        COMMIT_MSG="📸 Daily Snapshot $(date +%Y-%m-%d): PM33 Development Progress
        
        🎯 PMO Transformation Platform Development
        📅 Days to \$100K MRR Target: ${{ steps.snapshot.outputs.days_remaining }}
        
        📊 Development Activity:
        - Files modified: $(git diff --staged --name-only | wc -l)
        - Documentation updates: $(git diff --staged --name-only | grep '\.md$' | wc -l || echo 0)
        - Code changes: $(git diff --staged --name-only | grep -E '\.(tsx?|py)$' | wc -l || echo 0)
        
        🚀 Key Areas:
        $(git diff --staged --name-only | head -10 | sed 's/^/- /')
        
        🧠 Generated with Claude Code
        
        Co-Authored-By: Claude <noreply@anthropic.com>"
        
        git commit -m "$COMMIT_MSG"
        
    - name: Push changes
      run: |
        git push origin main
        
    - name: Create issue for critical changes
      if: steps.changes.outputs.critical_changed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: issue } = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `🚨 Critical PM33 Documentation Updated - $(date +%Y-%m-%d)`,
            body: `# Critical Project Files Modified
            
            Critical PM33 documentation files have been modified in today's snapshot. Please review:
            
            ## Modified Files
            - CLAUDE.md (Project memory and context)
            - INSTRUCTIONS-FOR-FUTURE-AGENTS.md (Agent guidance)  
            - PM33_PRODUCT_REQUIREMENTS_DOCUMENT.md (Product specification)
            
            ## Action Required
            - [ ] Review changes for accuracy
            - [ ] Update team on significant changes
            - [ ] Verify alignment with \$100K MRR by Dec 31 target
            
            ## Development Status
            Days remaining to target: ${{ steps.snapshot.outputs.days_remaining }}
            
            @claude Please review these critical changes and ensure consistency across all documentation.`,
            labels: ['documentation', 'critical-review', 'daily-snapshot']
          });
          
          console.log(\`Created issue #\${issue.number}\`);

    - name: Success notification
      if: success()
      run: |
        echo "✅ Daily snapshot completed successfully"
        echo "📊 Snapshot summary created"
        echo "🔄 Changes committed and pushed"
        echo "🎯 PM33 development progress tracked"